#! dotfiles
# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
	# are we ever going to enocunter a terminal with this many?
		RED=$(tput setaf 1)
		ORANGE=$(tput setaf 172)
		YELLOW=$(tput setaf 3)
		GREEN=$(tput setaf 190)
		BLUE=$(tput setaf 4)
        MAGENTA=$(tput setaf 9)
		PURPLE=$(tput setaf 141)
        WHITE=$(tput setaf 0)
	else
		RED=$(tput setaf 1)
		ORANGE=$(tput setaf 3)
		YELLOW=$(tput setaf 11)
		GREEN=$(tput setaf 2)
		BLUE=$(tput setaf 4)
		MAGENTA=$(tput setaf 5)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
		
	fi 
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
#for i in {0..255}; do tput setab $i; echo -n "    "; done; tput setab 0; echo
#http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
#http://www.funtoo.org/wiki/Prompt_Magic
#https://wiki.archlinux.org/index.php/Color_Bash_Prompt
#http://linux.101hacks.com/ps1-examples/prompt-color-using-tput/
#http://cs340.hubner.org/wiki/index.php?title=CPT-201_Fall_2012:Escape_Characters%2C_Colors%2C_and_ASCII_Art&redirect=no
	RED="\033[0;31m"
	ORANGE="\033[1;33m" # or bold yellow
	YELLOW="\033[0;33m"
	GREEN="\033[0;32m"
	BLUE="\033[0;34m"
	MAGENTA="\033[0;35m"
	PURPLE="\033[1;36m" # more bold cyan than purple
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
	
fi

export RED
export ORANGE
export YELLOW
export GREEN
export BLUE
export MAGENTA
export PURPLE
export WHITE
export BOLD
export RESET

# See below for more colors

function parse_git_dirty() {
  result=$(git status 2> /dev/null | tail -n1)
  ( [[ "$result" != *"working directory clean"* ]] && [[ "$result" == *"fatal: This operation must be run in a work tree"* ]] ) && echo "*"
  unset result
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

export PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]at \[$PURPLE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\l \# \$ \[$RESET\]"
export PS2="\[$ORANGE\]→ \[$RESET\]"

# ANSI color codes
#RS="\[\033[0m\]"    # reset
#HC="\[\033[1m\]"    # hicolor
#UL="\[\033[4m\]"    # underline
#INV="\[\033[7m\]"   # inverse background and foreground
#FBLK="\[\033[30m\]" # foreground black
#FRED="\[\033[31m\]" # foreground red
#FGRN="\[\033[32m\]" # foreground green
#FYEL="\[\033[33m\]" # foreground yellow
#FBLE="\[\033[34m\]" # foreground blue
#FMAG="\[\033[35m\]" # foreground magenta
#FCYN="\[\033[36m\]" # foreground cyan
#FWHT="\[\033[37m\]" # foreground white
#BBLK="\[\033[40m\]" # background black
#BRED="\[\033[41m\]" # background red
#BGRN="\[\033[42m\]" # background green
#BYEL="\[\033[43m\]" # background yellow
#BBLE="\[\033[44m\]" # background blue
#BMAG="\[\033[45m\]" # background magenta
#BCYN="\[\033[46m\]" # background cyan
#BWHT="\[\033[47m\]" # background white

# Reset
#Color_Off='\e[0m'       # Text Reset
#
## Regular Colors
#Black='\e[0;30m'        # Black
#Red='\e[0;31m'          # Red
#Green='\e[0;32m'        # Green
#Yellow='\e[0;33m'       # Yellow
#Blue='\e[0;34m'         # Blue
#Purple='\e[0;35m'       # Purple
#Cyan='\e[0;36m'         # Cyan
#White='\e[0;37m'        # White
#
## Bold
#BBlack='\e[1;30m'       # Black
#BRed='\e[1;31m'         # Red
#BGreen='\e[1;32m'       # Green
#BYellow='\e[1;33m'      # Yellow
#BBlue='\e[1;34m'        # Blue
#BPurple='\e[1;35m'      # Purple
#BCyan='\e[1;36m'        # Cyan
#BWhite='\e[1;37m'       # White
#
## Underline
#UBlack='\e[4;30m'       # Black
#URed='\e[4;31m'         # Red
#UGreen='\e[4;32m'       # Green
#UYellow='\e[4;33m'      # Yellow
#UBlue='\e[4;34m'        # Blue
#UPurple='\e[4;35m'      # Purple
#UCyan='\e[4;36m'        # Cyan
#UWhite='\e[4;37m'       # White
#
## Background
#On_Black='\e[40m'       # Black
#On_Red='\e[41m'         # Red
#On_Green='\e[42m'       # Green
#On_Yellow='\e[43m'      # Yellow
#On_Blue='\e[44m'        # Blue
#On_Purple='\e[45m'      # Purple
#On_Cyan='\e[46m'        # Cyan
#On_White='\e[47m'       # White
#
## High Intensity
#IBlack='\e[0;90m'       # Black
#IRed='\e[0;91m'         # Red
#IGreen='\e[0;92m'       # Green
#IYellow='\e[0;93m'      # Yellow
#IBlue='\e[0;94m'        # Blue
#IPurple='\e[0;95m'      # Purple
#ICyan='\e[0;96m'        # Cyan
#IWhite='\e[0;97m'       # White
#
## Bold High Intensity
#BIBlack='\e[1;90m'      # Black
#BIRed='\e[1;91m'        # Red
#BIGreen='\e[1;92m'      # Green
#BIYellow='\e[1;93m'     # Yellow
#BIBlue='\e[1;94m'       # Blue
#BIPurple='\e[1;95m'     # Purple
#BICyan='\e[1;96m'       # Cyan
#BIWhite='\e[1;97m'      # White
#
## High Intensity backgrounds
#On_IBlack='\e[0;100m'   # Black
#On_IRed='\e[0;101m'     # Red
#On_IGreen='\e[0;102m'   # Green
#On_IYellow='\e[0;103m'  # Yellow
#On_IBlue='\e[0;104m'    # Blue
#On_IPurple='\e[0;105m'  # Purple
#On_ICyan='\e[0;106m'    # Cyan
#On_IWhite='\e[0;107m'   # White